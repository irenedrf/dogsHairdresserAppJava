/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package peluqueriacaninairene;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JOptionPane;

/**
 *
 * @author irene
 */
public class VentanaLogsPedidos extends javax.swing.JFrame {

    /**
     * Creates new form VentanaLogs
     */
    public VentanaLogsPedidos() {
        setLocation (400, 300);
        setVisible(true);
        initComponents();
        populateTextField();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aceptar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        panelTextoPedidos = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        tituloLogs = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PEDIDOS");

        aceptar.setText("ACEPTAR");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        cancelar.setText("SALIR");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        areaTexto.setColumns(20);
        areaTexto.setRows(5);
        panelTextoPedidos.setViewportView(areaTexto);

        tituloLogs.setText("Pedidos pendientes de entrega:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(panelTextoPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(aceptar)
                            .addGap(18, 18, 18)
                            .addComponent(cancelar)))
                    .addComponent(tituloLogs, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloLogs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(panelTextoPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aceptar)
                    .addComponent(cancelar))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        escribirFichero();
    }//GEN-LAST:event_aceptarActionPerformed

 
    
    public void populateTextField(){
        File archivo = null;
        FileReader reader = null;
        BufferedReader buffer = null;
            try {
                archivo = new File("C:\\proyectoirene\\logsPedidos.txt");
                reader = new FileReader (archivo);
                buffer = new BufferedReader(reader);
                String linea;
                    while( (linea=buffer.readLine()) != null) {
                        areaTexto.setText(linea);
                    }
                
                }
            catch(IOException e){
                e.printStackTrace();
            }finally{
                try{
                    if( null != reader ){
                        reader.close();
                    }
                }catch (IOException e2){
                    e2.printStackTrace();
                }
            }
    }
    
    public void escribirFichero(){
        //para leer 
        File archivo = null;
        FileReader rea = null;
        BufferedReader buf = null;
        //escribir
        FileWriter arch = null;
        PrintWriter pw = null;
        
        try {
            //leer lo que se ha escrito ahora: leerá lo que ya estaba y lo añadido
            archivo = new File("C:\\proyectoirene\\logsPedidos.txt");
            rea = new FileReader (archivo);
            buf = new BufferedReader(rea);
            String linea;
            
            //escribir todo lo que se ha leído
            arch=new FileWriter("C:\\proyectoirene\\logsPedidos.txt");
            pw=new PrintWriter(arch);
            
            pw.print(areaTexto.getText());
            
            pw.close();
        } catch (IOException e) {
        } finally {
            try {
           if (null != arch)
              arch.close();
           } catch (IOException e2) {
           }
        }
        JOptionPane.showMessageDialog(null, "Mensaje escrito con éxito.", "WARNING MESSAGE", JOptionPane.WARNING_MESSAGE);
    }
    
    
    
    public static void main(String args[]) {
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaLogsPedidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar;
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JButton cancelar;
    private javax.swing.JScrollPane panelTextoPedidos;
    private javax.swing.JLabel tituloLogs;
    // End of variables declaration//GEN-END:variables
}
